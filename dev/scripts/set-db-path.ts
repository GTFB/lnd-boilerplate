#!/usr/bin/env bun

/**
 * Script to set database path for Dev Agent
 * Usage: bun run scripts/set-db-path.ts <path>
 */

import { join } from "path";
import { writeFileSync, existsSync, mkdirSync } from "fs";

const args = process.argv.slice(2);

if (args.length === 0) {
  console.log("‚ùå Please specify the database path");
  console.log("Example: bun run scripts/set-db-path.ts C:/OSPanel/data/dev-agent/dev-agent.db");
  process.exit(1);
}

const dbPath = args[0];
const configDir = "G:\\–û–±—â–∏–µ –¥–∏—Å–∫–∏\\Altrp\\dev-agent";
const envFile = join(configDir, ".env");

// Create config folder if it doesn't exist
if (!existsSync(configDir)) {
  mkdirSync(configDir, { recursive: true });
}

// Create configuration file
const envContent = `# Dev Agent Database Configuration
# Database path
DEV_AGENT_DB_PATH=${dbPath}

# –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEV_AGENT_LOG_LEVEL=info
DEV_AGENT_ENV=development
`;

try {
  writeFileSync(envFile, envContent, "utf8");
  console.log("‚úÖ –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!");
  console.log(`üìÅ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${envFile}`);
  console.log(`üóÑÔ∏è  –ü—É—Ç—å –∫ –ë–î: ${dbPath}`);
  console.log("");
  console.log("üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è:");
  console.log(`   set DEV_AGENT_DB_PATH=${dbPath}`);
  console.log("   bun run src/index.ts");
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", error);
  process.exit(1);
}
