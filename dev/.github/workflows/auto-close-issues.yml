name: Auto Close Issues on PR Merge

on:
  pull_request:
    types: [closed]

jobs:
  auto-close-issues:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Close linked issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const branchName = context.payload.pull_request.head.ref;
            
            console.log(`Processing merged PR #${prNumber} from branch: ${branchName}`);
            
            // Extract goal ID from branch name (format: feature/g-xxxxxx)
            const goalIdMatch = branchName.match(/^feature\/(g-[a-z0-9]{6})$/);
            if (!goalIdMatch) {
              console.log(`Branch ${branchName} does not match expected format feature/g-xxxxxx`);
              return;
            }
            
            const goalId = goalIdMatch[1];
            console.log(`Extracted goal ID: ${goalId}`);
            
            // Get all open issues to find the one linked to this goal
            const { data: issues } = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
              per_page: 100
            });
            
            console.log(`Found ${issues.length} open issues`);
            
            // Look for issues that mention this goal ID in title or body
            const linkedIssues = issues.filter(issue => 
              !issue.pull_request && (
                issue.title.includes(goalId) || 
                (issue.body && issue.body.includes(goalId))
              )
            );
            
            console.log(`Found ${linkedIssues.length} issues potentially linked to goal ${goalId}`);
            
            for (const issue of linkedIssues) {
              try {
                // Close the issue
                await github.rest.issues.update({
                  owner,
                  repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
                
                // Add a comment about the closure
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issue.number,
                  body: `ðŸŽ‰ **Issue automatically closed**\n\nThis issue has been closed because pull request #${prNumber} was merged, completing the associated goal \`${goalId}\`.\n\n**Branch**: \`${branchName}\`\n**Closed at**: ${new Date().toISOString()}`
                });
                
                console.log(`Closed issue #${issue.number}: ${issue.title}`);
              } catch (error) {
                console.error(`Failed to close issue #${issue.number}:`, error.message);
              }
            }
            
            if (linkedIssues.length === 0) {
              console.log(`No issues found linked to goal ${goalId}`);
            }
